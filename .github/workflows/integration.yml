name: Exitdir E2E Tests

on:
  pull_request:
    branches:
      - main

permissions: read-all

defaults:
  run:
    shell: bash
    working-directory: ./src/github.com/chainguard-dev/exitdir


jobs:
  exitdir-tests:
    name: e2e tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false # Keep running if one leg fails.
      matrix:
        k8s-version:
          - v1.24.x
          - v1.25.x

    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: on
      GOFLAGS: -ldflags=-s -ldflags=-w
      KO_DOCKER_REPO: registry.local:5000/exitdir
      KOCACHE: ~/ko
      COSIGN_EXPERIMENTAL: true

    steps:
      - uses: chainguard-dev/actions/setup-mirror@main
      # https://github.com/mvdan/github-actions-golang#how-do-i-set-up-caching-between-builds

      - name: Set up Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.3.0
        with:
          go-version: 1.19
          check-latest: true

      - name: Check out our repo
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.0.2
        with:
          path: ./src/github.com/chainguard-dev/exitdir

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ${{ env.KOCACHE }}
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - uses: ko-build/setup-ko@v0.6
        with:
          version: v0.12.0

      - name: Setup Cluster
        uses: chainguard-dev/actions/setup-kind@52eca3baf7c09ec1dbc4195449779fa59cc618e6
        id: kind
        with:
          k8s-version: ${{ matrix.k8s-version }}
          registry-authority: registry.local:5000
          cluster-suffix: cluster.local

      - name: Create sample job
        run: |
          ko apply -f - <<EOF
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: example
          spec:
            template:
              spec:
                restartPolicy: Never
                containers:
                  - name: leader
                    image: ko://chainguard.dev/exitdir/cmd/leader
                    env:
                      - name: EXIT_DIR
                        value: "/var/exitdir"
                    volumeMounts:
                      - name: exit-dir
                        mountPath: "/var/exitdir"
                  - name: follower
                    image: ko://chainguard.dev/exitdir/cmd/follower
                    env:
                      - name: EXIT_DIR
                        value: "/var/exitdir"
                    volumeMounts:
                      - name: exit-dir
                        mountPath: "/var/exitdir"
                volumes:
                  - name: exit-dir
                    emptyDir: {}
          EOF

      - name: Wait for job completion
        run: |
          kubectl wait --for=condition=complete --timeout=60s job/example
          kubectl logs job/example --all-containers

      - name: Collect diagnostics
        if: ${{ failure() }}
        uses: chainguard-dev/actions/kind-diag@main
        with:
          artifact-name: logs.${{ matrix.k8s-version }}
